name: buildx

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

env:
  IMAGE_NAME: lustyn/magicdrive

jobs:
  buildx:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Initial Buildx
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.IMAGE_NAME }}:testing
          platforms: linux/amd64,linux/arm/v7,linux/arm64
      -
        name: Load Built Image and Get Variables
        id: vars
        run: |
          docker buildx build \
            -t ${{ env.IMAGE_NAME }}:testing \
            --platform=linux/amd64 \
            --load \
            .
          CID=$(docker run -d ${{ env.IMAGE_NAME }}:testing)
          VER_FULL=$(docker exec $CID plexdrive --version)
          echo "VER_FULL=$VER_FULL" >> $GITHUB_ENV
          docker rm -f $CID
          VER_MINOR=$(echo $VER_FULL | cut -d. -f-2)
          echo "VER_MINOR=$VER_MINOR" >> $GITHUB_ENV
          VER_MAJOR=$(echo $VER_FULL | cut -d. -f-1)
          echo "VER_MAJOR=$VER_MAJOR" >> $GITHUB_ENV
          echo ::set-output name=SOURCE_REF::${GITHUB_REF#refs/*/}
      -
        name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Buildx and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.VER_FULL }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.VER_MINOR }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.VER_MAJOR }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.SOURCE_REF }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
      -
        name: Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.VER_FULL }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.VER_MINOR }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.VER_MAJOR }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.SOURCE_REF }}

  buildx-ref:
    runs-on: ubuntu-20.04
    if: github.ref != 'refs/heads/master'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Initial Buildx
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.IMAGE_NAME }}:testing
          platforms: linux/amd64,linux/arm/v7,linux/arm64
      -
        name: Load Built Image and Get Variables
        id: vars
        run: |
          docker buildx build \
            -t ${{ env.IMAGE_NAME }}:testing \
            --platform=linux/amd64 \
            --load \
            .
          CID=$(docker run -d ${{ env.IMAGE_NAME }}:testing)
          VER_FULL=$(docker exec $CID plexdrive --version)
          echo "VER_FULL=$VER_FULL" >> $GITHUB_ENV
          docker rm -f $CID
          VER_MINOR=$(echo $VER_FULL | cut -d. -f-2)
          echo "VER_MINOR=$VER_MINOR" >> $GITHUB_ENV
          VER_MAJOR=$(echo $VER_FULL | cut -d. -f-1)
          echo "VER_MAJOR=$VER_MAJOR" >> $GITHUB_ENV
          echo ::set-output name=SOURCE_REF::${GITHUB_REF#refs/*/}
      -
        name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Buildx and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.SOURCE_REF }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
      -
        name: Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.SOURCE_REF }}